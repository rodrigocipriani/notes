{"version":3,"sources":["modules/Weather/WeatherComponent.module.css","modules/App/appActions.js","modules/App/appReducer.js","modules/Editor/editorActions.js","modules/Editor/editorReducer.js","modules/Notes/notesActions.js","modules/Notes/notesReducer.js","firebase/firebaseUtils.js","firebase/FirebaseService.js","modules/Weather/rootReducer.js","shared/store.js","modules/Notes/NotesHome.js","modules/Weather/urls.js","modules/Weather/DataTable.js","modules/Weather/Welcome.js","modules/Weather/TopBar.js","modules/Weather/actionCreator.js","modules/Weather/Add.js","modules/Weather/Login.js","modules/Weather/NavigationLoggedWrapper.js","modules/Weather/NavigationWrapper.js","modules/Weather/WeatherComponent.js","modules/Weather/WeatherApp.js","modules/App/App.js","serviceWorker.js","index.js","modules/Notes/NotesHome.module.css"],"names":["module","exports","input-field","appActionTypes","initialState","user","editorActionTypes","text","notesActionTypes","uuidv1","require","notes","firebaseDatabase","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","firebaseAuth","auth","FirebaseService","getDataList","nodePath","callback","size","arguments","length","undefined","query","ref","limitToLast","on","dataSnapshot","items","forEach","childSnapshot","item","val","key","push","pushData","node","objToSubmit","id","set","remove","getUniqueDataBy","newData","once","snap","Object","keys","then","updateData","obj","objectSpread","createUser","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","onAuthChange","callbackLogin","callbackLogout","onAuthStateChanged","authUser","combineReducers","userAuth","state","action","type","persistConfig","storage","reducers","rootReducer","appReducer","editorReducer","payload","notesReducer","note","content","new","concat","toConsumableArray","map","lastNoteId","persistedReducer","persistReducer","store","createStore","persistor","persistStore","connect","_ref2","ownProps","dispatch","newNote","changeNote","_ref","_useState","useState","_useState2","slicedToArray","activeNote","setActiveNote","handleExitNote","handleChangeNote","event","target","value","react_default","a","createElement","Grid_default","container","spacing","xs","List_default","className","classes","root","index_es","paper","ListItem_default","role","dense","button","onClick","TextField_default","multiline","autoFocus","fullWidth","onChange","margin","onBlur","noteTextField","ListItemText_default","noteContent","primary","ListItemSecondaryAction_default","IconButton_default","aria-label","MoreVert_default","Button_default","color","urls","home","name","path","data","add","privateUrls","pathWithouParam","DataTable","Fragment","variant","component","selectable","index","temperatura","umidade","cliente","props","Link","assign","to","Welcome","Weather_TopBar","compose","withStyles","flexGrow","flex","withRouter","console","log","position","Menu_default","react","style","marginLeft","ArrowForward_default","Add","componentWillMount","_this","match","params","setState","submit","preventDefault","history","handleChange","defineProperty","render","onSubmit","label","required","marginTop","display","Component","Login","catch","error","alert","message","Redirect","ifLoggedGoToHome","objectWithoutProperties","ifNotLoggedGoToLogin","WeatherComponent","_this2","this","dataReceived","_this3","values","url","raised","Route","exact","Weather_NavigationLoggedWrapper","Weather_NavigationWrapper","WeatherApp","BrowserRouter","App","es","integration_react","loading","AppBar_default","Toolbar_default","Typography_default","Weather_WeatherApp","Notes_NotesHome","Boolean","window","location","hostname","ReactDOM","modules_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbc9b660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-field\":\"WeatherComponent_input-field__3TnG6\"};","const appActionTypes = {\r\n  LOGIN: \"LOGIN\",\r\n  LOGOUT: \"LOGOUT\"\r\n};\r\n\r\nexport { appActionTypes };\r\n","import { appActionTypes } from \"./appActions\";\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case appActionTypes.LOGIN:\r\n      return state;\r\n    case appActionTypes.LOGOUT:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const editorActionTypes = {\r\n  NEW_TEXT: \"NEW_TEXT\"\r\n};\r\n\r\n// todo: Better to use \"debounce\"\r\nexport const newText = text => ({\r\n  type: editorActionTypes.NEW_TEXT,\r\n  payload: text\r\n});\r\n\r\nexport { editorActionTypes };\r\n","import { editorActionTypes } from \"./editorActions\";\r\n\r\nconst initialState = {\r\n  text: \"# aaaaaaaaaaaaa\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case editorActionTypes.NEW_TEXT:\r\n      // console.log(\"action\", action);\r\n      return { ...state, text: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const notesActionTypes = {\r\n  NEW_NOTE: \"NEW_NOTE\",\r\n  CHANGE_NOTE: \"CHANGE_NOTE\",\r\n  RESET_LAST_NOTE_ID: \"RESET_LAST_NOTE_ID\"\r\n};\r\n\r\nexport const newNote = content => ({\r\n  type: notesActionTypes.NEW_NOTE,\r\n  payload: content\r\n});\r\n\r\n// todo: Better to use \"debounce\"\r\nexport const changeNote = (id, content) => ({\r\n  type: notesActionTypes.CHANGE_NOTE,\r\n  payload: { id, content }\r\n});\r\n\r\nexport { notesActionTypes };\r\n","import { notesActionTypes } from \"./notesActions\";\r\nconst uuidv1 = require(\"uuid/v1\");\r\n\r\nconst initialState = {\r\n  // {id, content}\r\n  notes: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case notesActionTypes.NEW_NOTE:\r\n      const note = {\r\n        id: uuidv1(),\r\n        content: \"\",\r\n        new: true\r\n      };\r\n      return { ...state, notes: [...state.notes, note] };\r\n\r\n    case notesActionTypes.CHANGE_NOTE:\r\n      const id = action.payload.id;\r\n      const content = action.payload.content;\r\n      const notes = state.notes.map(note => {\r\n        if (id !== note.id) {\r\n          return note;\r\n        }\r\n        return { ...note, content, new: false };\r\n      });\r\n      return { ...state, notes };\r\n\r\n    case notesActionTypes.RESET_LAST_NOTE_ID:\r\n      return { ...state, lastNoteId: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import firebaseApp from \"firebase/app\";\r\nimport \"firebase/firebase-database\";\r\nimport \"firebase/firebase-auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBy8EO3awpCW39D-G6GlnlLueOIWhkE3WU\",\r\n  authDomain: \"notescipriani.firebaseapp.com\",\r\n  databaseURL: \"https://notescipriani.firebaseio.com\",\r\n  projectId: \"notescipriani\",\r\n  storageBucket: \"notescipriani.appspot.com\",\r\n  messagingSenderId: \"417734883803\"\r\n};\r\n\r\nexport const firebaseImpl = firebaseApp.initializeApp(config);\r\nexport const firebaseDatabase = firebaseApp.database();\r\nexport const firebaseAuth = firebaseApp.auth();\r\n","import { firebaseDatabase, firebaseAuth } from \"./firebaseUtils\";\r\n\r\nexport default class FirebaseService {\r\n  static getDataList = (nodePath, callback, size = 10) => {\r\n    let query = firebaseDatabase.ref(nodePath).limitToLast(size);\r\n    query.on(\"value\", dataSnapshot => {\r\n      let items = [];\r\n      dataSnapshot.forEach(childSnapshot => {\r\n        let item = childSnapshot.val();\r\n        item[\"key\"] = childSnapshot.key;\r\n        items.push(item);\r\n      });\r\n      callback(items);\r\n    });\r\n\r\n    return query;\r\n  };\r\n\r\n  static pushData = (node, objToSubmit) => {\r\n    const ref = firebaseDatabase.ref(node).push();\r\n    const id = firebaseDatabase.ref(node).push().key;\r\n    ref.set(objToSubmit);\r\n    return id;\r\n  };\r\n\r\n  static remove = (id, node) => {\r\n    return firebaseDatabase.ref(node + \"/\" + id).remove();\r\n  };\r\n\r\n  static getUniqueDataBy = (node, id, callback) => {\r\n    const ref = firebaseDatabase.ref(node + \"/\" + id);\r\n    let newData = {};\r\n    ref\r\n      .once(\"value\", dataSnapshot => {\r\n        if (\r\n          !dataSnapshot ||\r\n          dataSnapshot === undefined ||\r\n          !dataSnapshot.val() ||\r\n          dataSnapshot.val() === undefined\r\n        ) {\r\n          callback(null);\r\n          return;\r\n        }\r\n\r\n        const snap = dataSnapshot.val();\r\n        const keys = Object.keys(snap);\r\n        keys.forEach(key => {\r\n          newData[key] = snap[key];\r\n        });\r\n      })\r\n      .then(() => {\r\n        callback(newData);\r\n      });\r\n  };\r\n\r\n  static updateData = (id, node, obj) => {\r\n    return firebaseDatabase.ref(node + \"/\" + id).set({ ...obj });\r\n  };\r\n\r\n  static createUser = (email, password) => {\r\n    return firebaseAuth.createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  static login = (email, password) => {\r\n    return firebaseAuth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  static logout = () => {\r\n    return firebaseAuth.signOut();\r\n  };\r\n\r\n  static onAuthChange = (callbackLogin, callbackLogout) => {\r\n    firebaseAuth.onAuthStateChanged(authUser => {\r\n      if (!authUser) {\r\n        callbackLogout(authUser);\r\n      } else {\r\n        callbackLogin(authUser);\r\n      }\r\n    });\r\n  };\r\n}\r\n","import FirebaseService from \"../../firebase/FirebaseService\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport function userReducer(state = null, action) {\r\n  if (action.type === \"LOGIN\") {\r\n    return action.user;\r\n  }\r\n\r\n  if (action.type === \"LOGOUT\") {\r\n    FirebaseService.logout();\r\n    return null;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default combineReducers({ userAuth: userReducer });\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport appReducer from \"../modules/App/appReducer\";\r\nimport editorReducer from \"../modules/Editor/editorReducer\";\r\nimport notesReducer from \"../modules/Notes/notesReducer\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"../modules/Weather/rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  rootReducer,\r\n  appReducer,\r\n  editorReducer,\r\n  notesReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nlet store = createStore(persistedReducer);\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { newNote, changeNote } from \"./notesActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport classes from \"./NotesHome.module.css\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst NotesHome = ({ notes, lastNoteId, changeNote, newNote }) => {\r\n  const [activeNote, setActiveNote] = useState(null);\r\n\r\n  const handleClickNote = id => () => {\r\n    // console.log(\"id\", id);\r\n    setActiveNote(id);\r\n  };\r\n\r\n  const handleExitNote = id => () => {\r\n    // console.log(\"id\", id);\r\n    if (activeNote === id) {\r\n      setActiveNote(null);\r\n    }\r\n  };\r\n\r\n  const handleAddNewNote = () => () => {\r\n    newNote();\r\n  };\r\n\r\n  const handleChangeNote = note => event => {\r\n    // console.log(\"change note \", event.target.value);\r\n    if (note.new) {\r\n      setActiveNote(note.id);\r\n    }\r\n    changeNote(note.id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={8}>\r\n      <Grid item xs={12}>\r\n        <List className={classes.root}>\r\n          {notes.map(note => (\r\n            <Paper key={note.id} className={classes.paper}>\r\n              <ListItem\r\n                key={note.id}\r\n                role={undefined}\r\n                dense\r\n                button\r\n                onClick={handleClickNote(note.id)}\r\n              >\r\n                {activeNote === note.id || note.new ? (\r\n                  <TextField\r\n                    id={`textfield-${note.id}`}\r\n                    // label=\"Content\"\r\n                    multiline\r\n                    autoFocus\r\n                    fullWidth\r\n                    // rowsMax=\"4\"\r\n                    value={note.content}\r\n                    onChange={handleChangeNote(note)}\r\n                    margin=\"normal\"\r\n                    onBlur={handleExitNote(note.id)}\r\n                    className={classes.noteTextField}\r\n                  />\r\n                ) : (\r\n                  <ListItemText\r\n                    className={classes.noteContent}\r\n                    primary={note.content}\r\n                  />\r\n                )}\r\n                <ListItemSecondaryAction>\r\n                  <IconButton aria-label=\"Comments\">\r\n                    <MoreVert />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </Paper>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button color=\"primary\" onClick={handleAddNewNote()}>\r\n          Criar uma nota...\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ notesReducer }, ownProps) => {\r\n  return {\r\n    notes: notesReducer.notes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  newNote: content => dispatch(newNote(content)),\r\n  changeNote: (id, content) => dispatch(changeNote(id, content))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NotesHome);\r\n","const urls = {\r\n  home: { name: \"Home\", path: \"/\" },\r\n  data: { name: \"Data\", path: \"/data\" },\r\n  add: { name: \"Add\", path: \"/add\" },\r\n  login: { name: \"Login\", path: \"/login\" },\r\n  notes: { name: \"Notes\", path: \"/notes\" }\r\n};\r\n\r\nconst privateUrls = {\r\n  edit: {\r\n    name: \"Edit\",\r\n    path: \"/edit/:id\",\r\n    pathWithouParam: \"/edit/\"\r\n  }\r\n};\r\n\r\nexport { urls, privateUrls };\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FirebaseService from \"../../firebase/FirebaseService\";\r\nimport { privateUrls } from \"./urls\";\r\n\r\nconst DataTable = ({ data }) => {\r\n  const remove = id => {\r\n    FirebaseService.remove(id, \"leituras\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"headline\" component=\"h2\">\r\n        Add New\r\n      </Typography>\r\n      <Table selectable=\"false\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Key</TableCell>\r\n            <TableCell>Temperature</TableCell>\r\n            <TableCell>Humidity</TableCell>\r\n            <TableCell>Client</TableCell>\r\n            <TableCell>Data</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((item, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell>{item.key}</TableCell>\r\n              <TableCell>{item.temperatura}</TableCell>\r\n              <TableCell>{item.umidade}</TableCell>\r\n              <TableCell>{item.cliente}</TableCell>\r\n              <TableCell>{item.data}</TableCell>\r\n              <TableCell>\r\n                <Button onClick={() => remove(item.key)}>Remove</Button>\r\n                <Button\r\n                  component={props => (\r\n                    <Link\r\n                      to={`${privateUrls.edit.pathWithouParam}${item.key}`}\r\n                      {...props}\r\n                    />\r\n                  )}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"headline\" component=\"h2\">\r\n        Welcome\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { urls } from \"./urls\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./actionCreator\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n};\r\n\r\nconst TopBar = ({ userAuth, logout, classes }) => {\r\n  console.log(\"userAuth\", userAuth);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Menu\"\r\n          component={props => <Link to={urls.home.path} {...props} />}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Typography type=\"title\" color=\"inherit\" className={classes.flex}>\r\n          My Awesome React App\r\n        </Typography>\r\n\r\n        {userAuth && (\r\n          <Fragment>\r\n            <Typography\r\n              type=\"title\"\r\n              color=\"inherit\"\r\n              style={{ marginLeft: \"20px\" }}\r\n            >\r\n              {userAuth.email}\r\n            </Typography>\r\n\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n              onClick={() => logout()}\r\n            >\r\n              <ArrowForward />\r\n            </IconButton>\r\n          </Fragment>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { userAuth: state.userAuth };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  };\r\n};\r\n\r\nTopBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(TopBar);\r\n","export const login = user => {\r\n  return { user, type: \"LOGIN\" };\r\n};\r\n\r\nexport const logout = () => {\r\n  return { type: \"LOGOUT\" };\r\n};\r\n","import { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport FirebaseService from \"../../firebase/FirebaseService\";\r\nimport { urls } from \"./urls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Add extends Component {\r\n  state = { id: null, temperatura: \"\", umidade: \"\", data: \"\", cliente: \"\" };\r\n\r\n  componentWillMount = () => {\r\n    const { id } = this.props.match.params;\r\n\r\n    if (!(id === undefined || !id)) {\r\n      this.setState({ id });\r\n      FirebaseService.getUniqueDataBy(\"leituras\", id, data =>\r\n        this.setState({ ...data }, () => console.log(this.state))\r\n      );\r\n    }\r\n  };\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n\r\n    const { temperatura } = this.state;\r\n    const { umidade } = this.state;\r\n    const { data } = this.state;\r\n    const { cliente } = this.state;\r\n\r\n    let objToSubmit = {\r\n      temperatura,\r\n      umidade,\r\n      data,\r\n      cliente\r\n    };\r\n\r\n    if (this.props.match.params.id === undefined) {\r\n      FirebaseService.pushData(\"leituras\", objToSubmit);\r\n    } else {\r\n      FirebaseService.updateData(\r\n        this.props.match.params.id,\r\n        \"leituras\",\r\n        objToSubmit\r\n      );\r\n    }\r\n\r\n    this.props.history.push(urls.data.path);\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"headline\" component=\"h2\">\r\n          Add New\r\n        </Typography>\r\n        <form onSubmit={this.submit}>\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            value={this.state.temperatura}\r\n            label=\"Temperature\"\r\n            required\r\n            onChange={this.handleChange(\"temperatura\")}\r\n          />\r\n\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            label=\"Humidity\"\r\n            value={this.state.umidade}\r\n            required\r\n            onChange={this.handleChange(\"umidade\")}\r\n          />\r\n\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            label=\"Date\"\r\n            value={this.state.data}\r\n            required\r\n            onChange={this.handleChange(\"data\")}\r\n          />\r\n\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"email\"\r\n            label=\"Client\"\r\n            value={this.state.cliente}\r\n            required\r\n            onChange={this.handleChange(\"cliente\")}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            style={{ marginTop: \"20px\", display: \"inline-block\" }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Add);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport FirebaseService from \"../../firebase/FirebaseService\";\r\nimport { urls } from \"./urls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  createUser = event => {\r\n    event.preventDefault();\r\n    const { email } = this.state;\r\n    const { password } = this.state;\r\n\r\n    FirebaseService.createUser(email, password)\r\n      .then(user => {\r\n        this.props.history.push(urls.home.path);\r\n        console.log(user);\r\n      })\r\n      .catch(error => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  login = event => {\r\n    event.preventDefault();\r\n    const { email } = this.state;\r\n    const { password } = this.state;\r\n    FirebaseService.login(email, password)\r\n      .then(user => {\r\n        this.props.history.push(urls.home.path);\r\n        console.log(user);\r\n      })\r\n      .catch(error => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"headline\" component=\"h2\">\r\n          Login\r\n        </Typography>\r\n        <form onSubmit={this.login}>\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            label=\"email\"\r\n            required\r\n            onChange={this.handleChange(\"email\")}\r\n          />\r\n          <TextField\r\n            className=\"input-field\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            label=\"password\"\r\n            required\r\n            onChange={this.handleChange(\"password\")}\r\n          />\r\n          <Button\r\n            onClick={this.createUser}\r\n            style={{ marginTop: \"20px\", display: \"inline-block\" }}\r\n          >\r\n            New User\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{ marginTop: \"20px\", display: \"inline-block\" }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport React from \"react\";\r\nimport { urls } from \"./urls\";\r\n\r\nconst ifLoggedGoToHome = (userAuth, Component, props) => {\r\n  return userAuth != null ? (\r\n    <Redirect to={urls.home.path} />\r\n  ) : (\r\n    <Component {...props} />\r\n  );\r\n};\r\n\r\nconst NavigationLoggedWrapper = ({ userAuth, component, ...otherProps }) => {\r\n  return ifLoggedGoToHome(userAuth, component, otherProps);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { userAuth: state.userAuth };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps)\r\n)(NavigationLoggedWrapper);\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport React from \"react\";\r\nimport { urls } from \"./urls\";\r\n\r\nconst ifNotLoggedGoToLogin = (userAuth, Component, props) => {\r\n  return userAuth != null ? (\r\n    <Component {...props} />\r\n  ) : (\r\n    <Redirect to={urls.login.path} />\r\n  );\r\n};\r\n\r\nconst NavigationWrapper = ({ userAuth, component, ...otherProps }) => {\r\n  return ifNotLoggedGoToLogin(userAuth, component, otherProps);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { userAuth: state.userAuth };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps)\r\n)(NavigationWrapper);\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { Route } from \"react-router-dom\";\r\nimport DataTable from \"./DataTable\";\r\nimport FirebaseService from \"../../firebase/FirebaseService\";\r\nimport { urls, privateUrls } from \"./urls\";\r\nimport Welcome from \"./Welcome\";\r\nimport TopBar from \"./TopBar\";\r\nimport Add from \"./Add\";\r\nimport \"./WeatherComponent.module.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport NavigationLoggedWrapper from \"./NavigationLoggedWrapper\";\r\nimport NavigationWrapper from \"./NavigationWrapper\";\r\nimport { login, logout } from \"./actionCreator\";\r\n\r\nclass WeatherComponent extends Component {\r\n  // const [data, setData] = useState(null);\r\n\r\n  // let mounted = false;\r\n  // useEffect(() => {\r\n  //   console.log(\"11111111\");\r\n  //   if (!mounted) {\r\n  //     console.log(\"22222222\");\r\n  //     FirebaseService.getDataList(\"leituras\", dataReceived => {\r\n  //       console.log(\"3333333333\", dataReceived);\r\n  //       if (dataReceived !== data) {\r\n  //         console.log(\"4444444\");\r\n  //         setData({ data: dataReceived });\r\n  //       }\r\n  //     });\r\n  //     mounted = true;\r\n  //   }\r\n  // }, [data]);\r\n\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    FirebaseService.getDataList(\"leituras\", dataReceived =>\r\n      this.setState({ data: dataReceived })\r\n    );\r\n    FirebaseService.onAuthChange(\r\n      authUser => this.props.login(authUser),\r\n      () => this.props.logout()\r\n    );\r\n    FirebaseService.getDataList(\"leituras\", dataReceived =>\r\n      this.setState({ data: dataReceived })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <TopBar />\r\n        {Object.values(urls).map((url, index) => {\r\n          return (\r\n            <Button\r\n              raised=\"true\"\r\n              key={index}\r\n              component={props => <Link to={url.path} {...props} />}\r\n            >\r\n              {url.name}\r\n            </Button>\r\n          );\r\n        })}\r\n        <Route\r\n          exact\r\n          path={urls.login.path}\r\n          render={props => (\r\n            <NavigationLoggedWrapper component={Login} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={urls.home.path}\r\n          render={props => <NavigationWrapper component={Welcome} {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path={urls.data.path}\r\n          render={props => (\r\n            <NavigationWrapper\r\n              component={DataTable}\r\n              {...props}\r\n              data={this.state.data}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={urls.add.path}\r\n          render={props => <NavigationWrapper component={Add} {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path={privateUrls.edit.path}\r\n          render={props => <NavigationWrapper component={Add} {...props} />}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: authUser => dispatch(login(authUser)),\r\n    logout: () => dispatch(logout())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { userAuth: state.userAuth };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(WeatherComponent);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { urls } from \"./urls\";\r\nimport WeatherComponent from \"./WeatherComponent\";\r\n\r\nconst WeatherApp = () => {\r\n  return (\r\n    <Router>\r\n      <Route path={urls.home.path} component={WeatherComponent} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { store, persistor } from \"../../shared/store\";\nimport NotesHome from \"../Notes/NotesHome\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport WeatherApp from \"../Weather/WeatherApp\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography type=\"title\" color=\"inherit\">\n                Notes by Cipriani\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {/* <Router>\n      <Route path={urls.home.path} component={WeatherComponent} />\n    </Router> */}\n          <WeatherApp />\n          <NotesHome />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./modules/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NotesHome_root__1gOHv\",\"paper\":\"NotesHome_paper__2tgUq\",\"noteContent\":\"NotesHome_noteContent__2Ya89\",\"noteTextField\":\"NotesHome_noteTextField__1iAIU\"};"],"sourceRoot":""}